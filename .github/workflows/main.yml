name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        working-directory: ./backend
        run: pip install poetry
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install
      - name: Run pylint
        working-directory: ./backend
        run: poetry run invoke lint
      - name: Create database file
        working-directory: ./backend
        run: touch user_db.db
      - name: Create database
        working-directory: ./backend
        run: sqlite3 user_db.db < schema.sql
      - name: Create .env
        working-directory: ./backend
        run: echo "SECRET_KEY=123" > .env
      - name: Test backend
        working-directory: ./backend
        run: poetry run invoke test
      - name: Leave backend on for testing
        working-directory: ./backend
        run: poetry run invoke start &

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.5.1
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
      - name: Leave frontend on for testing
        working-directory: ./frontend
        run: npm start &
      - name: Run tests
        working-directory: ./frontend
        run: npm run test:e2e
      - name: Run eslint
        working-directory: ./frontend
        run: npm run lint
